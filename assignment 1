#number 1
import matplotlib.pyplot as plt
import numpy as np

# Generate x values
x = np.linspace(-5, 5, 100)

# Calculate y values using the equation
y = x**2 - 10

# Create the plot
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='$y = x^2 - 10$', color='b', linewidth=2)
plt.title('Plot of $y = x^2 - 10$')
plt.xlabel('x', color='y')
plt.ylabel('y', color='g')
plt.grid(True)
plt.legend()
plt.show()

#number 2
import matplotlib.pyplot as plt
import numpy as np

# Generate x values
x = np.linspace(-5, 5, 100)

# Calculate y values using the equation 
y = x**3 + x - 100 

# Create the plot
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='$y = x^3 + x - 100$', color='b', linewidth=2)
plt.title('Plot of $y = x^3 + x - 100$')
plt.xlabel('x', color='y')
plt.ylabel('y', color='g')
plt.grid(True)
plt.legend()
plt.show()

#number 3
import matplotlib.pyplot as plt
import numpy as np

# Generate x values
x = np.linspace(-5, 5, 100)

# Calculate y values using the equation \(y = x^10 + x^8 + x^2 - 8\)
y = x**10 - x**8 + x**2 - 8

# Create the plot
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='$y = x**10 - x**8 + x^2 - 8$', color='b', linewidth=2)
plt.title('Plot of $y = $')
plt.xlabel('x', color='y')
plt.ylabel('y', color='g')
plt.grid(True)
plt.legend()
plt.show()

#number 4
import matplotlib.pyplot as plt
import numpy as np

# Generate x values
x = np.linspace(-5, 5, 100)

# Calculate y values using the equation 
y = x**4 + x**3 + x**2 + x + 1

# Create the plot
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='$y = x^4 + x^3 + x^2 + x + 1$', color='b', linewidth=2)
plt.title('Plot of $y = x^4 + x^3 + x^2 + x + 1$')
plt.xlabel('x', color='y')
plt.ylabel('y', color='g')
plt.grid(True)
plt.legend()
plt.show()

#number 5
import matplotlib.pyplot as plt
import numpy as np

# Generate x values
x = np.linspace(-5, 5, 100)

# Calculate y values using the equation
y = x**2 + x + 10/2*x 

# Create the plot
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='$y =\\frac{{x^2 + x + 10}}{{2x}}$', color='b', linewidth=2)
plt.title('Plot of $y = \\frac{{x^2 + x + 10}}{{2x}}$')
plt.xlabel('x', color='y')
plt.ylabel('y', color='g')
plt.grid(True)
plt.legend()
plt.show()

#number 6
import matplotlib.pyplot as plt
import numpy as np

# Generate x values
x = np.linspace(-5, 5, 100)

# Calculate y values using the equation
y = np.sin(x)/ (3*x)

# Create the plot
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='$y =\\frac{{\\sin(x)}}{{3x}}$', color='b', linewidth=2)
plt.title('Plot of $y =\\frac{{\\sin(x)}}{{3x}}$')
plt.xlabel('x', color='y')
plt.ylabel('y', color='g')
plt.grid(True)
plt.legend()
plt.show()

#number 7
import matplotlib.pyplot as plt
import numpy as np

# Generate x values
x = np.linspace(-5, 5, 100)

# Calculate y values using the equation 
y = x**3 + 2*x**2 - 10*x + 3

# Create the plot
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='$y = x^3 + 2x^2 - 10x + 3$', color='b', linewidth=2)
plt.title('Plot of $y = x^3 + 2x^2 - 10x + 3$')
plt.xlabel('x')
plt.ylabel('y')
plt.grid(True)
plt.legend()
plt.show()

#number 8
import matplotlib.pyplot as plt
import numpy as np

# Generate x values
x = np.linspace(-5, 5, 100)

# Calculate y values using the equation 
y = np.cos (x)/(3*x)

# Create the plot
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='$y =\\frac{{\\sin(x)}}{{3x}}$', color='b', linewidth=2)
plt.title('Plot of $y =\\frac{{\\sin(x)}}{{3x}}$')
plt.xlabel('x')
plt.ylabel('y')
plt.grid(True)
plt.legend()
plt.show()

#number 9
import matplotlib.pyplot as plt
import numpy as np

x = np.linspace(-10, 10, 1000)
x = x[x !=0]

y = (x**3 / (2*x)) - 10 * x

plt.figure(figsize=(8, 6))
plt.plot(x, y, label='$y = \\frac{{x^3}}{{2x}} - 10x$', color='b', linewidth=2)
plt.axhline(y=0, color='y')
plt.axvline(x=0, color='y')
plt.title('Plot of $y = \\frac{{x^3}}{{2x}} - 10x$')
plt.xlabel('x', color='y')
plt.ylabel('y', color='g')
plt.grid(True)
plt.legend()
plt.show()

#number 10
import matplotlib.pyplot as plt
import numpy as np

def f(x):
  return (x+2)*(x+3)*(x-4)

x = np.linspace(-5, 5, 100)  
y = f(x)

plt.plot(x, y)
plt.grid(True)
plt.xlabel("x")
plt.ylabel("y")
plt.title("Graph of f(x)=(x+2)(x+3)(x-4)")
plt.axhline(y=0, color="y")
plt.axvline(x=0, color="y")
plt.show()
